config:
  attenuator:
    # Maximum number of inflight requests.
    #
    # TODO(john): allow this to be over-ridden on a service-by-service
    # (and backend-by-backend) basis
    queue_size: 100
  broker:
    upstream:
      # Name of this service.
      # We use this to map /api/v1/broker/{SERVICE} to the service map
      "search":
        # /api/v1/broker/search will randomly choose between bing and google
        # backends
        bing:
          impl: proxy
          # The URL to forward-proxy the request to
          url: https://www.bing.com
          # Any URL (or POST) params that we want to map
          params:
            # Keep the 'q=' parameter exactly as it is, i.e.
            # we don't need to rename it or map it in any way
            q: q
          # Any headers we want to send to the upstream
          headers:
            X-Alizee: wiggle
          record:
            requests: search
            responses: search
        google:
          impl: proxy
          url: https://www.google.com?q=${q}
        rule: random
  gateway:
    # The gateway is just an ordinary forward proxy:
    #
    # http://.../api/v1/gateway/https://foo.com?param1=value
    #
    # will just be proxied to https://foo.com?param1=value
    listen: 0.0.0.0:8888
