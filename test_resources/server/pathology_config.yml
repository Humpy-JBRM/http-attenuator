config:
  pathology:
    # A named pathology profile.
    #
    # This allows us to easily create pathologies which have specific
    # behaviour and then just refer to them by name in a particular
    # server config.
    #
    # e.g.
    #
    # server:
    #   host: *.foo.com
    #   pathology: random_404
    #
    # This ability will become even more imortant / useful as we
    # extend the config API to allow backend servers to be created
    # and configured programatically
    simple:
      # The failure pathology
      #
      #   pathology: weight
      failure_weights:
        httpcode: 90
        timeout: 10
      # The http code pathology 
      httpcode:
        # How long requests are to take (in seconds)
        #
        # Currently supported:
        #
        #   normal(mean, stddev)
        #   poisson(mean)
        #
        # normal(1.0, 0.2) returns values between ~0.2 < value < ~1.6
        # in a normal distribution and the request will sleep for that
        # amount of time
        duration: normal(1.0, 0.2)
        # The HTTP codes to return, and the weight for each return code.
        # The weights do not need to add up to 100, I just made them add
        # up to 100 here so its easy to grok the % of time that code is returned
        "200":
          weight: 80
          headers:
            # any headers that we want the handler to return when this code
            # is selected according to the cdf
            Content-type: application/json
          # any response body we want the handler to return when this code
          # is selected according to the cdf
          body: {"success": true}
        "401":
          weight: 5
        "404":
          weight: 1
        "429":
          weight: 5
          # The headers to return when we encounter this code
          headers:
            X-Backoff-Millis: 60000
            X-Retry-After: now() + 60s
        "500":
          weight: 9
      # For the timeout pathology, the number of milliseconds to sleep for
      # when handling a request
      timeout_millis: 10000
  server:
    listen: 0.0.0.0:8888

